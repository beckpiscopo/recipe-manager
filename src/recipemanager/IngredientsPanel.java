/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package recipemanager;

import java.awt.Color;

import javax.swing.DefaultListModel;
import javax.swing.*;



public class IngredientsPanel extends javax.swing.JPanel {
    


    /**
     * Creates new Ingredients form
     */
    public IngredientsPanel() {
        
        initComponents();
        updateIngredients();
       
    }
    
    
    //get the data from the main class, and update panel
    public void updateIngredients(){
        DefaultListModel model = (DefaultListModel) ingredientList.getModel();
        
        //remove anything that might be already there
        model.removeAllElements();
        
        //go through every ingredient and add it to the list (model)
        for(int i = 0; i < RecipeManager.allIngredients.size(); i++){
            Ingredient ing = RecipeManager.allIngredients.get(i); //get the i-th ingredient
        
            model.addElement(ing); //add it to the list
        }
        
    }
    
    public Ingredient getSelectedIngredient(){
        return (Ingredient) ingredientList.getSelectedValue();
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator2 = new javax.swing.JSeparator();
        jMenu1 = new javax.swing.JMenu();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        jScrollPane1 = new javax.swing.JScrollPane();
        ingredientList = new javax.swing.JList();
        modifyIngredientButton = new javax.swing.JButton();
        addButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        IngredientNameField = new javax.swing.JTextField();
        nameLabel = new javax.swing.JLabel();
        priceLabel = new javax.swing.JLabel();
        ingredientPriceField = new javax.swing.JTextField();
        ingredientUnitField = new javax.swing.JTextField();
        unitLabel = new javax.swing.JLabel();
        ingredientBankHeading = new javax.swing.JLabel();
        removeIngredientButton = new javax.swing.JButton();

        jMenu1.setText("jMenu1");

        jMenu2.setText("File");
        jMenuBar1.add(jMenu2);

        jMenu3.setText("Edit");
        jMenuBar1.add(jMenu3);

        ingredientList.setFont(new java.awt.Font("AdornS Condensed Sans", 1, 24)); // NOI18N
        ingredientList.setModel(new DefaultListModel());
        ingredientList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        ingredientList.setSelectionBackground(new java.awt.Color(0, 153, 153));
        ingredientList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ingredientListMouseClicked(evt);
            }
        });
        ingredientList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                ingredientListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(ingredientList);

        modifyIngredientButton.setBackground(new java.awt.Color(0, 51, 0));
        modifyIngredientButton.setText("Modify Ingredient");
        modifyIngredientButton.setToolTipText("Save ingredient modifications.");
        modifyIngredientButton.setEnabled(false);
        modifyIngredientButton.setName("modifyIngredientButton"); // NOI18N
        modifyIngredientButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifyIngredientButtonActionPerformed(evt);
            }
        });

        addButton.setBackground(new java.awt.Color(0, 153, 153));
        addButton.setText("Create New Ingredient");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        IngredientNameField.setFont(new java.awt.Font("AdornS Condensed Sans", 1, 18)); // NOI18N
        IngredientNameField.setText("ex)  Arugula");
        IngredientNameField.setToolTipText("Add new ingredient or edit a current one.");
        IngredientNameField.setSelectionColor(new java.awt.Color(0, 153, 153));
        IngredientNameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IngredientNameFieldActionPerformed(evt);
            }
        });

        nameLabel.setFont(new java.awt.Font("Bungee", 1, 24)); // NOI18N
        nameLabel.setText("Name:");

        priceLabel.setFont(new java.awt.Font("Bungee", 1, 24)); // NOI18N
        priceLabel.setText("Price:");

        ingredientPriceField.setFont(new java.awt.Font("AdornS Condensed Sans", 1, 18)); // NOI18N

        ingredientUnitField.setFont(new java.awt.Font("AdornS Condensed Sans", 1, 18)); // NOI18N

        unitLabel.setFont(new java.awt.Font("Bungee", 1, 24)); // NOI18N
        unitLabel.setText("Unit:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(priceLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(nameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(unitLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ingredientUnitField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                    .addComponent(IngredientNameField)
                    .addComponent(ingredientPriceField)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(IngredientNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nameLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ingredientPriceField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(priceLabel))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(ingredientUnitField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(unitLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE))))
        );

        ingredientBankHeading.setFont(new java.awt.Font("Bungee", 1, 48)); // NOI18N
        ingredientBankHeading.setText("Ingredients");
        ingredientBankHeading.setToolTipText("");

        removeIngredientButton.setBackground(new java.awt.Color(0, 51, 0));
        removeIngredientButton.setText("Remove Ingredient");
        removeIngredientButton.setToolTipText("Warning! Removes ingredient from all recipes.");
        removeIngredientButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                removeIngredientButtonMouseClicked(evt);
            }
        });
        removeIngredientButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeIngredientButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(71, 71, 71)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(addButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
                            .addComponent(modifyIngredientButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
                            .addComponent(removeIngredientButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(96, 96, 96))
            .addGroup(layout.createSequentialGroup()
                .addGap(186, 186, 186)
                .addComponent(ingredientBankHeading, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(196, 196, 196))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(ingredientBankHeading, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(addButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(modifyIngredientButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(removeIngredientButton)))
                .addGap(11, 11, 11))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void ingredientListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_ingredientListValueChanged
        Ingredient selected;
        selected = (Ingredient) ingredientList.getSelectedValue();
        
        //synchronize the recipe panel to this selection
        RecipeManager.recPanel.updateAddFields(selected);
        
        if(selected == null){ //nothing is selected
            IngredientNameField.setText("");
            ingredientPriceField.setText("");
            ingredientUnitField.setText("");
            
            modifyIngredientButton.setEnabled(false);
            IngredientNameField.setEnabled(false);
            ingredientPriceField.setEnabled(false);
            ingredientUnitField.setEnabled(false);
        }
        else{ //some ingredient is selected
            String name, unit, price;
            
            name = selected.getName();
            IngredientNameField.setText(name);
            
            price = selected.getPrice() + "";
            ingredientPriceField.setText(price);
            
            //here is the same thing on one line of code
            ingredientUnitField.setText(selected.getUnitOfMeasurement());
            
            modifyIngredientButton.setEnabled(true);
            IngredientNameField.setEnabled(true);
            ingredientPriceField.setEnabled(true);
            ingredientUnitField.setEnabled(true);
        }
        
        //also need to change the color of all the textfields
        ingredientPriceField.setBackground(Color.white);
    }//GEN-LAST:event_ingredientListValueChanged

    
    //Add Ingredient to Ingredient Bank
    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        //try to convert the price to a number
        double price;
        
        try{
            price = Double.parseDouble(ingredientPriceField.getText());
            //if the code got to this point, the number was successfully converted
            //..so change the textfield back to white
            ingredientPriceField.setBackground(Color.white);
          
        }
        catch(Exception e){
            //highlight the price field
            ingredientPriceField.setBackground(Color.red);
            return;
        }
        
        String name;
        name = IngredientNameField.getText();
        
        String unit;
        unit = ingredientUnitField.getText();
        
        //create a new ingredient object
        Ingredient ing = new Ingredient();
        
        //populate the fields of the ingredient
        ing.setName(name);
        ing.setPrice(price);
        ing.setUnitOfMeasurement(unit);
        
        //add it to the repository in Recipe Manager class
        RecipeManager.allIngredients.add(ing);
        
        //update the interface
        updateIngredients();
        
        IngredientNameField.setText("");
        ingredientPriceField.setText("");
        ingredientUnitField.setText("");
    }//GEN-LAST:event_addButtonActionPerformed

    
    //Modify Ingredient in Ingredient Bank
    private void modifyIngredientButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifyIngredientButtonActionPerformed
  
        Ingredient selected;
        selected = (Ingredient) ingredientList.getSelectedValue();
        int index = ingredientList.getSelectedIndex();

        
        String name;
            name = selected.getName();
            name =  IngredientNameField.getText();
            
            
        String unit;
            unit = selected.getUnitOfMeasurement();
            unit = ingredientUnitField.getText();

 
         //try to convert the price to a number
        double price;
            price = selected.getPrice();
            price = Double.parseDouble(ingredientPriceField.getText());
        
            
        selected.setName(name);
        selected.setUnitOfMeasurement(unit);
        selected.setPrice(price);

   
        
        //update the interface
        updateIngredients();
        
        //clear text fields
        IngredientNameField.setText("");
        ingredientPriceField.setText("");
        ingredientUnitField.setText(""); 
    }//GEN-LAST:event_modifyIngredientButtonActionPerformed

   
    private void IngredientNameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IngredientNameFieldActionPerformed
  

    }//GEN-LAST:event_IngredientNameFieldActionPerformed

    
    // Remove Ingredient from Ingredient Bank
    private void removeIngredientButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeIngredientButtonActionPerformed
          Ingredient selected;
         selected = (Ingredient) ingredientList.getSelectedValue();
            int index = ingredientList.getSelectedIndex();
            
            selected.removedFromRecipe();


        
      
        //update the interface
        updateIngredients();
        
        
        //clear text fields
        IngredientNameField.setText("");
        ingredientPriceField.setText("");
        ingredientUnitField.setText("");    
                   
                
        
    }//GEN-LAST:event_removeIngredientButtonActionPerformed

    private void ingredientListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ingredientListMouseClicked
               Ingredient selected;
        selected = (Ingredient) ingredientList.getSelectedValue();
                    String name, unit, price;
            
            name = selected.getName();
            IngredientNameField.setText(name);
            
            price = selected.getPrice() + "";
            ingredientPriceField.setText(price);
            
            //here is the same thing on one line of code
            ingredientUnitField.setText(selected.getUnitOfMeasurement());
            
            modifyIngredientButton.setEnabled(true);
            IngredientNameField.setEnabled(true);
            ingredientPriceField.setEnabled(true);
            ingredientUnitField.setEnabled(true);
        
    }//GEN-LAST:event_ingredientListMouseClicked

    private void removeIngredientButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_removeIngredientButtonMouseClicked
          Ingredient selected;
         selected = (Ingredient) ingredientList.getSelectedValue();
            int index = ingredientList.getSelectedIndex();
            
            ingredientList.remove(index);
       
        IngredientNameField.setText("");
        ingredientPriceField.setText("");
        ingredientUnitField.setText("");    
                
    }//GEN-LAST:event_removeIngredientButtonMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField IngredientNameField;
    private javax.swing.JButton addButton;
    private javax.swing.JLabel ingredientBankHeading;
    private javax.swing.JList ingredientList;
    private javax.swing.JTextField ingredientPriceField;
    private javax.swing.JTextField ingredientUnitField;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JButton modifyIngredientButton;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JLabel priceLabel;
    private javax.swing.JButton removeIngredientButton;
    private javax.swing.JLabel unitLabel;
    // End of variables declaration//GEN-END:variables
}
